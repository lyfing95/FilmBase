<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lyf.filmbase.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lyf.filmbase.entity.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="wallet" property="wallet" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="VARCHAR" />
    <result column="tell" property="tell" jdbcType="VARCHAR" />
    <result column="profilehead" property="profilehead" jdbcType="VARCHAR" />
    <result column="profile" property="profile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, nickname, gender, wallet, age, tell, profilehead, profile, status,
    email
  </sql>
  
  
  <select id="selectAllUser" resultMap="BaseResultMap">
   select * from user
  </select>
 <!-- 查询评论用户信息 -->
   <select id="selectReviewUser" resultMap="BaseResultMap" parameterType="map">
    select username  from user
    where id = #{userid}
  </select>
  <!--  添加注册方法 -->
  <select id="selecRegistUser" resultMap="BaseResultMap" parameterType="java.lang.String">
    select username from user
    where username = #{username} 
  </select>
 <!--  添加登录方法 -->
  <select id="selectLoginUser" resultMap="BaseResultMap" parameterType="map">
    select
     <include refid="Base_Column_List" />
    from user
    where username = #{username} and password = #{password}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.lyf.filmbase.entity.User" >
    insert into user (id, username, password, 
      nickname, gender, wallet, 
      age, tell, profilehead, 
      profile, email , status)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},#{wallet,jdbcType=INT}, 
      #{age,jdbcType=VARCHAR}, #{tell,jdbcType=VARCHAR}, #{profilehead,jdbcType=VARCHAR}, 
     #{profile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lyf.filmbase.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="wallet != null" >
        wallet,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="tell != null" >
        tell,
      </if>
      <if test="profilehead != null" >
        profilehead,
      </if>
      <if test="profile != null" >
        profile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="wallet != null" >
        #{wallet,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="tell != null" >
        #{tell,jdbcType=VARCHAR},
      </if>
      <if test="profilehead != null" >
        #{profilehead,jdbcType=VARCHAR},
      </if>
      <if test="profile != null" >
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyf.filmbase.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="wallet != null" >
        wallet = #{wallet,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="tell != null" >
        tell = #{tell,jdbcType=VARCHAR},
      </if>
      <if test="profilehead != null" >
        profilehead = #{profilehead,jdbcType=VARCHAR},
      </if>
      <if test="profile != null" >
        profile = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyf.filmbase.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      wallet = #{wallet,jdbcType=INTEGER},
      age = #{age,jdbcType=VARCHAR},
      tell = #{tell,jdbcType=VARCHAR},
      profilehead = #{profilehead,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>